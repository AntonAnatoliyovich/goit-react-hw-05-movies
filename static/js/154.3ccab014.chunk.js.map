{"version":3,"file":"static/js/154.3ccab014.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","components/TrendingMovies/MovieList.jsx","services/movies-api.js","webpack://react-homework-template/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/SearchBar.jsx","views/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n    return <h1 className={s.title}>{text}</h1>;\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n    return (\n        <>\n        <ul>\n            {movies.map(({ id, original_title }) => (\n            <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                <h3>{original_title}</h3>\n                </Link>\n            </li>\n            ))}\n        </ul>\n        </>\n    );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    querySearch: '/search/movie',\n    movieDetails: '/movie',\n    movieCredits: '/credits',\n    movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\n    export const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n    );\n\n    return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n    const res = await axios.get(\n        `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n\n    return res.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MoviesPage_searchForm__bufBH\",\"searchInput\":\"MoviesPage_searchInput__ejfTW\",\"searchButton\":\"MoviesPage_searchButton__jm-oy\"};","import s from './MoviesPage.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleQuerySearch = e => {\n        setSearchQuery(e.target.value.toLowerCase());\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (searchQuery.trim() === '') {\n        alert('Enter the film title');\n    }\n\n        onSearch(searchQuery);\n        setSearchQuery('');\n    };\n\n    return (\n        <>\n        <form onSubmit={handleSubmit} className={s.searchForm}>\n            <input\n                type=\"text\"\n                name=\"searchQuery\"\n                value={searchQuery}\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search ...\"\n                onChange={handleQuerySearch}\n                className={s.searchInput}\n            />\n            <button\n                type=\"submit\"\n                className={s.searchButton}\n            >\n            Search\n            </button>\n        </form>\n        </>\n    );\n};\n\nSearchBar.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/MoviesPage/SearchBar';\nimport { fetchByQuery } from 'services/movies-api';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\n\nconst MoviesPage = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const location = useLocation();\n    const searchRequest = searchParams.get('query');\n\n    useEffect(() => {\n        if (!searchRequest) {\n        return;\n        }\n\n    const fetchMovie = () => {\n        setLoading(true);\n        fetchByQuery(searchRequest)\n            .then(results => {\n            if (!results.length) {\n                alert('No movies found!');\n            }\n\n            setMovies(results);\n            })\n            .catch(error => {\n            setError('Ooops. Something went wrong...');\n            console.log(error);\n            })\n            .finally(setLoading(false));\n        };\n        fetchMovie();\n    }, [searchRequest]);\n\n    function onSubmit(value) {\n        setSearchParams({ query: `${value}` });\n    }\n\n    return (\n        <>\n        <Container>\n            <PageHeading text={'Movie Search'} />\n            {loading && 'Loading ...'}\n            {error && <div>{error}</div>}\n\n            <SearchBar onSearch={onSubmit} />\n            {movies && <MovieList movies={movies} prevLocation={location} />}\n        </Container>\n        </>\n    );\n};\n\nexport default MoviesPage;\n"],"names":["PageHeading","text","className","s","movies","prevLocation","map","id","original_title","to","state","from","API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","catch","console","log","finally","Container","MovieList"],"sourceRoot":""}