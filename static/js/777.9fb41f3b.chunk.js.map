{"version":3,"file":"static/js/777.9fb41f3b.chunk.js","mappings":"8PAEe,SAASA,IACpB,OACI,yDAC2B,SAAC,KAAD,CAAMC,GAAG,IAAT,uBAA8B,MAGhE,CCDc,SAASC,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACKC,MAAK,SAAAC,GACNR,EAAUQ,EACT,IACAC,OAAM,SAAAR,GACPC,EAAS,kCACTQ,QAAQC,IAAIV,EACX,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGhB,GAAE,IAEH,IAAMS,GAAcV,IAAYJ,EAAOe,OACvC,OACI,+BACA,UAACC,EAAA,EAAD,YACI,SAAC,IAAD,CAAaC,KAAM,oBAClBb,GAAW,cACXU,IAAc,SAAClB,EAAD,IACdM,IAAS,yBAAMA,IACfF,IAAU,SAACkB,EAAA,EAAD,CAAWlB,OAAQA,QAIzC,C,sDCvCD,MAAwB,2B,SCCT,SAASmB,EAAT,GAAgC,IAATF,EAAQ,EAARA,KAClC,OAAO,eAAIG,UAAWC,EAAf,SAAyBJ,GACnC,C,2CCwBD,IAzBkB,SAAC,GAA8B,IAA5BjB,EAA2B,EAA3BA,OAAQsB,EAAmB,EAAnBA,aACzB,OACI,+BACA,wBACKtB,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACZ,yBACI,SAAC,KAAD,CAAM5B,GAAE,kBAAa2B,GAAME,MAAO,CAAEC,KAAML,GAA1C,UACA,wBAAKG,OAFAD,EADG,OAUvB,C,+LCfKI,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACQ,uBADRA,EAEW,gBAFXA,EAGY,SAHZA,EAIY,WAJZA,EAKY,WAGLvB,EAAS,mCAAG,yGAAOwB,EAAP,+BAAc,EAAd,SACHF,EAAAA,EAAAA,IAAA,UACXC,EADW,oBACoBF,EADpB,iBACoCG,EADpC,wCADG,cACfC,EADe,yBAIdA,EAAIC,KAAKxB,SAJK,2CAAH,qDAOLyB,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACVF,EAAAA,EAAAA,IAAA,UACXC,EADW,oBACuBF,EADvB,iBACuCG,EADvC,kBACqDI,EADrD,wCADU,cACtBH,EADsB,yBAKrBA,EAAIC,KAAKxB,SALY,2CAAH,sDAQhB2B,EAAkB,mCAAG,WAAMZ,GAAN,uFACZK,EAAAA,EAAAA,IAAA,UACXC,EADW,YACgBN,EADhB,oBAC8BI,EAD9B,oBADY,cACxBI,EADwB,yBAKvBA,EAAIC,MALmB,2CAAH,sDAQlBI,EAAkB,mCAAG,WAAMb,GAAN,uFACZK,EAAAA,EAAAA,IAAA,iBACJL,GADI,OACCM,EADD,oBACoCF,EADpC,oBADY,cACxBI,EADwB,yBAKvBA,EAAIC,KAAKK,MALc,2CAAH,sDAQlBC,EAAkB,mCAAG,WAAOf,GAAP,4FAAWO,EAAX,+BAAkB,EAAlB,SACZF,EAAAA,EAAAA,IAAA,iBACJL,GADI,OACCM,EADD,oBACoCF,EADpC,gCACmEG,IAFvD,cACxBC,EADwB,yBAKvBA,EAAIC,KAAKxB,SALc,2CAAH,qD","sources":["ui/NotFoundView.jsx","components/HomePage/HomePage.js","webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","components/TrendingMovies/MovieList.jsx","services/movies-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n    return (\n        <h1>\n        Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n        </h1>\n    );\n}\n","import Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/movies-api';\nimport NotFoundView from 'ui/NotFoundView';\n\nexport default function GetTrendingMovies() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchTrendingMovies = () => {\n        setLoading(true);\n        getMovies()\n            .then(results => {\n            setMovies(results);\n            })\n            .catch(error => {\n            setError('Ooops. Something went wrong...');\n            console.log(error);\n            })\n            .finally(() => setLoading(false));\n        };\n        fetchTrendingMovies();\n    }, []);\n\n    const isNotFound = !loading && !movies.length;\n    return (\n        <>\n        <Container>\n            <PageHeading text={'Trending Movies'}></PageHeading>\n            {loading && 'Loading ...'}\n            {isNotFound && <NotFoundView />}\n            {error && <div>{error}</div>}\n            {movies && <MovieList movies={movies} />}\n        </Container>\n        </>\n    );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n    return <h1 className={s.title}>{text}</h1>;\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n    return (\n        <>\n        <ul>\n            {movies.map(({ id, original_title }) => (\n            <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                <h3>{original_title}</h3>\n                </Link>\n            </li>\n            ))}\n        </ul>\n        </>\n    );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    querySearch: '/search/movie',\n    movieDetails: '/movie',\n    movieCredits: '/credits',\n    movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\n    export const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n    );\n\n    return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n    const res = await axios.get(\n        `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n\n    return res.data.results;\n};\n"],"names":["NotFoundView","to","GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","text","MovieList","PageHeading","className","s","prevLocation","map","id","original_title","state","from","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}